@using Bakdelar.Areas.Identity.Data; 
@using Bakdelar.Areas.Identity.Pages.Account.Manage; 

@inject SignInManager<MyUser> SignInManager
@inject UserManager<MyUser> userManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var isAdmin = await userManager.IsInRoleAsync(userManager.GetUserAsync(User).Result, "Admin");
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profil</a></li>
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">E-post</a></li>*@
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Lösenord</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.CustomerInfoNavClass(ViewContext)" id="update-address" asp-page="./CustomerInfo">Namn och adress</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">Externa inloggningar</a></li>
    }
    @*@<li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Tvåfaktorsautentisering</a></li>*@
    @if (!isAdmin)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Ta bort konto</a></li>
    }
</ul>
